{"ast":null,"code":"var _jsxFileName = \"D:\\\\typescript\\\\react-ts\\\\src\\\\components\\\\NewTodo.tsx\",\n  _s = $RefreshSig$();\nimport { useRef } from \"react\";\nimport classes from \"./NewTodo.module.css\";\nimport { useContext } from \"react\";\nimport { TodosContext } from \"../store/todos-context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NewTodo = () => {\n  _s();\n  const todoCtx = useContext(TodosContext);\n  const todoTextInputRef = useRef(null);\n\n  // here we are making it clear\n  // that the ref is going to be htmlinput type in typescript\n  // null - no initial value - typescript\n\n  const submitHandler = event => {\n    event.preventDefault();\n    const enteredText = todoTextInputRef.current.value;\n    if (enteredText.trim().length === 0) {\n      //\n      return;\n    }\n    todoCtx.addTodo(enteredText);\n  };\n\n  // react.form event when we are submitiing the form\n  // if we were using mouse event then whould have used\n  // React.mouseEvent in typescript\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: submitHandler,\n    className: classes.form,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"\",\n      children: \"Todo text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"text\",\n      ref: todoTextInputRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \" Add Todo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(NewTodo, \"GhRjWNHKtiX9L5ZEpeFlFzeaV/E=\");\n_c = NewTodo;\nexport default NewTodo;\nvar _c;\n$RefreshReg$(_c, \"NewTodo\");","map":{"version":3,"names":["useRef","classes","useContext","TodosContext","jsxDEV","_jsxDEV","NewTodo","_s","todoCtx","todoTextInputRef","submitHandler","event","preventDefault","enteredText","current","value","trim","length","addTodo","onSubmit","className","form","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","ref","_c","$RefreshReg$"],"sources":["D:/typescript/react-ts/src/components/NewTodo.tsx"],"sourcesContent":["import { useRef } from \"react\";\r\nimport classes from \"./NewTodo.module.css\";\r\nimport { useContext } from \"react\";\r\nimport { TodosContext } from \"../store/todos-context\";\r\n\r\nconst NewTodo: React.FC = () => {\r\n\r\n  const todoCtx = useContext(TodosContext);\r\n  const todoTextInputRef = useRef<HTMLInputElement>(null);\r\n\r\n  \r\n\r\n  // here we are making it clear\r\n  // that the ref is going to be htmlinput type in typescript\r\n  // null - no initial value - typescript\r\n\r\n  const submitHandler = (event: React.FormEvent) => {\r\n    event.preventDefault();\r\n    const enteredText = todoTextInputRef.current!.value;\r\n    if (enteredText.trim().length === 0) {\r\n      //\r\n      return;\r\n    }\r\n    todoCtx.addTodo(enteredText);\r\n  };\r\n\r\n  // react.form event when we are submitiing the form\r\n  // if we were using mouse event then whould have used\r\n  // React.mouseEvent in typescript\r\n\r\n  return (\r\n    <form onSubmit={submitHandler} className={classes.form}>\r\n      <label htmlFor=\"\">Todo text</label>\r\n      <input type=\"text\" id=\"text\" ref={todoTextInputRef} />\r\n      <button> Add Todo</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default NewTodo;\r\n"],"mappings":";;AAAA,SAASA,MAAM,QAAQ,OAAO;AAC9B,OAAOC,OAAO,MAAM,sBAAsB;AAC1C,SAASC,UAAU,QAAQ,OAAO;AAClC,SAASC,YAAY,QAAQ,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtD,MAAMC,OAAiB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAE9B,MAAMC,OAAO,GAAGN,UAAU,CAACC,YAAY,CAAC;EACxC,MAAMM,gBAAgB,GAAGT,MAAM,CAAmB,IAAI,CAAC;;EAIvD;EACA;EACA;;EAEA,MAAMU,aAAa,GAAIC,KAAsB,IAAK;IAChDA,KAAK,CAACC,cAAc,EAAE;IACtB,MAAMC,WAAW,GAAGJ,gBAAgB,CAACK,OAAO,CAAEC,KAAK;IACnD,IAAIF,WAAW,CAACG,IAAI,EAAE,CAACC,MAAM,KAAK,CAAC,EAAE;MACnC;MACA;IACF;IACAT,OAAO,CAACU,OAAO,CAACL,WAAW,CAAC;EAC9B,CAAC;;EAED;EACA;EACA;;EAEA,oBACER,OAAA;IAAMc,QAAQ,EAAET,aAAc;IAACU,SAAS,EAAEnB,OAAO,CAACoB,IAAK;IAAAC,QAAA,gBACrDjB,OAAA;MAAOkB,OAAO,EAAC,EAAE;MAAAD,QAAA,EAAC;IAAS;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAQ,eACnCtB,OAAA;MAAOuB,IAAI,EAAC,MAAM;MAACC,EAAE,EAAC,MAAM;MAACC,GAAG,EAAErB;IAAiB;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eACtDtB,OAAA;MAAAiB,QAAA,EAAQ;IAAS;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACrB;AAEX,CAAC;AAACpB,EAAA,CAhCID,OAAiB;AAAAyB,EAAA,GAAjBzB,OAAiB;AAkCvB,eAAeA,OAAO;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}