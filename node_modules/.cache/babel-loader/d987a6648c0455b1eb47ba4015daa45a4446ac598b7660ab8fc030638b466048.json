{"ast":null,"code":"var _jsxFileName = \"D:\\\\typescript\\\\react-ts\\\\src\\\\components\\\\Todos.tsx\",\n  _s = $RefreshSig$();\nimport React, { useContext } from \"react\";\nimport { TodosContext } from '../store/todos-context';\nimport TodoList from \"./TodoList\";\nimport classes from \"./Todos.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Todos = () => {\n  _s();\n  const todosCtx = useContext(TodosContext);\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: classes.todos,\n    children: todosCtx.items.map(item =>\n    /*#__PURE__*/\n    // <li key={item.id}>{item.text}</li>\n    _jsxDEV(TodoList, {\n      text: item.text,\n      onRemoveTodo: todosCtx.removeTodo.bind(null, item.id)\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n_s(Todos, \"B+6Xu1sI4jB5K2IUQ1s9LkSPLdc=\");\n_c = Todos;\nexport default Todos;\n\n// changing fucntion component to const\n// and use generic type\n// props which has array of string type\n// proper type anotations\n// we can use this with other component\n// defineing generic type for props in typescript\nvar _c;\n$RefreshReg$(_c, \"Todos\");","map":{"version":3,"names":["React","useContext","TodosContext","TodoList","classes","jsxDEV","_jsxDEV","Todos","_s","todosCtx","className","todos","children","items","map","item","text","onRemoveTodo","removeTodo","bind","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/typescript/react-ts/src/components/Todos.tsx"],"sourcesContent":["import React, { useContext } from \"react\";\r\nimport Todo from \"../models/todo\";\r\nimport { TodosContext } from '../store/todos-context';\r\nimport TodoList from \"./TodoList\";\r\nimport classes from \"./Todos.module.css\";\r\n\r\n\r\nconst Todos: React.FC= () => {\r\n\r\n  const todosCtx = useContext(TodosContext);\r\n  return (\r\n    <ul className={classes.todos}>\r\n      {todosCtx.items.map((item) => (\r\n        // <li key={item.id}>{item.text}</li>\r\n        <TodoList\r\n          key={item.id}\r\n          text={item.text}\r\n          onRemoveTodo={todosCtx.removeTodo.bind(null, item.id)}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default Todos;\r\n\r\n// changing fucntion component to const\r\n// and use generic type\r\n// props which has array of string type\r\n// proper type anotations\r\n// we can use this with other component\r\n// defineing generic type for props in typescript\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,QAAQ,OAAO;AAEzC,SAASC,YAAY,QAAQ,wBAAwB;AACrD,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,OAAO,MAAM,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGzC,MAAMC,KAAe,GAAEA,CAAA,KAAM;EAAAC,EAAA;EAE3B,MAAMC,QAAQ,GAAGR,UAAU,CAACC,YAAY,CAAC;EACzC,oBACEI,OAAA;IAAII,SAAS,EAAEN,OAAO,CAACO,KAAM;IAAAC,QAAA,EAC1BH,QAAQ,CAACI,KAAK,CAACC,GAAG,CAAEC,IAAI;IAAA;IACvB;IACAT,OAAA,CAACH,QAAQ;MAEPa,IAAI,EAAED,IAAI,CAACC,IAAK;MAChBC,YAAY,EAAER,QAAQ,CAACS,UAAU,CAACC,IAAI,CAAC,IAAI,EAAEJ,IAAI,CAACK,EAAE;IAAE,GAFjDL,IAAI,CAACK,EAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAIf;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACC;AAET,CAAC;AAAChB,EAAA,CAfID,KAAe;AAAAkB,EAAA,GAAflB,KAAe;AAiBrB,eAAeA,KAAK;;AAEpB;AACA;AACA;AACA;AACA;AACA;AAAA,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}